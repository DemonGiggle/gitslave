#!/bin/sh
#
#
#
PATH=$PWD:$PATH

set -e

rm -rf checkdir
mkdir -p checkdir/master checkdir/master2 checkdir/masterprep checkdir/masterprep2
BASE=`pwd`
(cd checkdir/masterprep
 for f in top sub1 sub2 sub3
  do
   mkdir $f
   (cd $f
    git init
    date > datelist
    echo $f > packagename
    git add *
    git commit -a -m "Initial files"
    cd ../../master; git clone --bare --mirror ../masterprep/$f $f)
  done)
(cd checkdir/masterprep2
 for f in top2 sub21
  do
   mkdir $f
   (cd $f
    git init
    date > datelist
    echo $f > packagename
    git add *
    git commit -a -m "Initial files"
    cd ../../master2; git clone --bare --mirror ../masterprep2/$f $f)
  done)

git clone $BASE/checkdir/master/top $BASE/checkdir/slave
cd checkdir/slave
echo
echo Starting gits checks
echo ----------------------------------------------------------------------
set -x
: Configure the git slave setup and upload it
gits prepare
gits attach ../sub1 sub1
gits attach ../sub2 sub2
gits populate
gits push
: Someone else gets a copy of the package and git slave config
gits clone $BASE/checkdir/master/top $BASE/checkdir/slave2
cd ../slave2
:  Actually instantiate the slaves
#gits populate
gits pull
:  Make some mods and commit
date >> datelist
date >> sub1/datelist
gits status
gits commit -a -m "First stage updates"
gits push
: Get the latest changes, create another slave and publish it
cd ../slave
gits pull
gits attach ../sub3 sub3
gits push
: Person2 gets the new slave module
cd ../slave2
gits pull
gits populate
: Create a private branch and do work on it
cd ../slave
gits pull
gits checkout -b privateb master
date >> sub2/datelist
gits commit -a -m "Updating date in sub2 on branch privateb"
# Now fails with error "not tracking anything" which is very true
#gits push
: "Person2 checks, but no changes (and no new branch), makes a change, commits"
cd ../slave2
gits pull
gits populate
gits branch -a
date >> datelist
gits commit -a -m "Updating date in top"
gits push
: Person1 makes another change, checks to see latest changes, merges branch, then publishes
cd ../slave
gits fetch
gits diff master origin/master
date >> sub2/datelist
gits commit -a -m "Finish updating date in sub2 on branch privateb"
gits checkout master
gits pull
# "Also works, but Seth does not like fastforward's rewriting of history"
#gits merge privateb
gits merge --no-ff privateb
gits push
: Person2 finds changes, makes another, commit/publish
cd ../slave2
gits pull
date >> sub2/datelist
gits commit -a -m "Back at you!"
gits push
cd ../slave
: "Delete private branch to prevent accidential publish (e.g. push -all)"
gits branch -d privateb
: "Get latest changes, make public branch"
gits pull
gits tag -m "Release 1.0.0" 'checkdir-1.0.0'
gits push --tags
gits branch 'checkdir-1.0'
gits push --all
: "stupid: my local branch and remote origin branch are disconnected, reconnect them"
gits branch -d checkdir-1.0
gits branch checkdir-1.0 origin/checkdir-1.0
gits push --all
: "Person2 discovers new release/tag/branch, pulls himself onto branch"
cd ../slave2
gits pull
gits branch -a
gits tag -l
gits branch checkdir-1.0 origin/checkdir-1.0
gits checkout checkdir-1.0
: "Fixes bug, merges fix onto master, publishes changes"
date >> sub2/datelist
gits commit -a -m "Sigh, a bug in the new release"
gits checkout master
gits merge --no-ff checkdir-1.0
gits push --all
: "Person1 takes change, finds another bug, repeat"
cd ../slave
gits pull
gits checkout master
(date; cat sub2/datelist) > sub2/datelist1
mv sub2/datelist1  sub2/datelist
gits commit -a -m "I am reminded that this is needed for 2.x"
gits checkout checkdir-1.0
gits pull
date >> sub2/datelist
gits commit -a -m "Sigh, and another bug in the new release"
gits checkout master
gits pull
gits merge --no-ff checkdir-1.0
gits push
: "Prepare SuperDuper project of which the old thing is just a component"
git clone $BASE/checkdir/master2/top2 $BASE/checkdir/superduper
cd ../superduper
gits prepare
gits attach ../sub21 sub21
gits attach --recursive=.gitslave ../../master/top submastertop
gits populate
for f in . ./sub21 ./submastertop ./submastertop/sub1 ./submastertop/sub2 ./submastertop/sub3
 do
  date >> $f/datelist
 done
gits commit -a -m "Combined superduper project"
gits push
: "Person 2 clones the new superproject"
gits clone $BASE/checkdir/master2/top2 $BASE/checkdir/superduper2
cd ../superduper2
for f in . ./sub21 ./submastertop ./submastertop/sub1 ./submastertop/sub2 ./submastertop/sub3
 do
  date >> $f/datelist
 done
gits commit -a -m "Fixes super-bug"
gits push
: "Person 2 makes (but does not push) a change"
for f in . ./sub21 ./submastertop ./submastertop/sub1 ./submastertop/sub2 ./submastertop/sub3
 do
  date >> $f/datelist
 done
gits commit -a -m "Fixes super-bug 2"
: "Person 1 gets the latest changes"
cd ../superduper
gits pull --rebase
: "Person 1 makes a shadow clone for special circumstances"
gits clone --fromcheckout ../superduper ../superduper1
: "Person 1 adds person 2 as a remote"
cd ../superduper1
gits remote add --fromcheckout othercheckout $BASE/checkdir/superduper2
gits fetch othercheckout
gits merge othercheckout/master
: "Person 1 adjusts newly obtained patch"
for f in . ./sub21 ./submastertop ./submastertop/sub1 ./submastertop/sub2 ./submastertop/sub3
 do
  date >> $f/datelist
 done
gits commit -a -m "Adjustment to super-bug 2"
: "Person 1 repoints origin to real upstream as a remote and pushes"
gits update-remote-url --no-fromcheckout origin $BASE/checkdir/master2/top2
gits push
: "Person 1 updates normal repo and then adjusts fix again"
cd ../superduper
gits pull
for f in . ./sub21 ./submastertop ./submastertop/sub1 ./submastertop/sub2 ./submastertop/sub3
 do
  date >> $f/datelist
 done
gits commit -a -m "Adjustment2 to super-bug 2"
: "Person 1 updates shadow checkout"
cd ../superduper1
gits update-remote-url --fromcheckout othercheckout $BASE/checkdir/superduper
gits fetch othercheckout
gits merge othercheckout/master
: "Person 1 adjusts final patch"
for f in . ./sub21 ./submastertop ./submastertop/sub1 ./submastertop/sub2 ./submastertop/sub3
 do
  date >> $f/datelist
 done
gits commit -a -m "Final adjustment to super-bug 2"
gits push
